# .github/workflows/ci.yml  – drop-in fix
name: CI

on:
  push:
    branches: [ main, dev, feature/** ]
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install runtime deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install dev / QA deps
        run: |
          pip install -r requirements-dev.txt

      # ---------- Quality gates (note the dot) ----------
      - name: Black (format check)
        run: black --check .

      # ---------- Tests & coverage ----------
      - name: Run pytest
        run: |
          pytest -q --cov=. --cov-report=xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  windows-installer:
    needs: tests
    runs-on: windows-latest

    env:
      VERSION: ${{ github.run_number }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller==6.4.0

      # --- PyInstaller bundle ------------------------------------
      - name: PyInstaller one-file EXE
        run: |
          pyi-makespec --name FleetManager --onefile --windowed main.py
          # add Qt & ReportLab data
          echo "from PyInstaller.utils.hooks import collect_data_files" >> FleetManager.spec
          echo "datas = collect_data_files('PyQt5') + collect_data_files('reportlab')" >> FleetManager.spec
          pyinstaller FleetManager.spec

      # --- Install Inno Setup & build installer ------------------
      - name: Install Inno Setup
        run: choco install innosetup --yes

      - name: Build .exe installer
        shell: pwsh
        run: |
          # Affiche la version pour débogage
          Write-Host "MyVersion = $env:VERSION"
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" `
            "/DMyVersion=$env:VERSION" `
            "deploy/windows/installer.iss"

      # --- Upload final artifact ---------------------------------
      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: FleetManager-Setup
          path: deploy/windows/Output/FleetManager-Setup.exe

